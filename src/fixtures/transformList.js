import * as f from '../validators/isTransformList';

export default {
    valid: [
        'matrix(1, -0.3, 0, 1, 0, 0)',
        'matrix3d(1, 0, 0.00, 0, 0.00, 0, 1.00, 0.008, 0, -1, 0, 0, 0, 0, 0, 1)',
        'translate(50%, 50%)',
        'translate(50px, 50px)',
        'translate(10%)',
        ...f.singleLPs.map(fn => `${fn}(10%)`),
        ...f.singleLPs.map(fn => `${fn}(50px)`),
        'scale(2, 2)',
        'scale(2)',
        ...f.singleAngles.map(fn => `${fn}(90deg)`),
        ...f.singleLengths.map(fn => `${fn}(100px)`),
        ...f.singleNumbers.map(fn => `${fn}(2)`),
        'scale3d(2, 2, 1)',
        'skew(90deg, 90deg)',
        'skew(0.5turn)',
        'translate3d(10%, 10%, 100px)',
        'rotate3d(10, 10, 10, 90deg)',
    ],
    invalid: [
        'matrix(-0.3)',
        'matrix(1, 0.3, 0, 1, 0, zero)',
        'matrix(1 -0.3 0 1 0 0)',
        'translate(50% 50%)',
        'translate(10px,)',
        'translate(10px, 10px, 10px)',
        ...f.singleLPs.map(fn => `${fn}(10px 10px)`),
        'scale(2 2)',
        'scale(2,)',
        'scale(2, 2, 2)',
        ...f.singleAngles.map(fn => `${fn}(90 degrees)`),
        ...f.singleLengths.map(fn => `${fn}(100)`),
        ...f.singleNumbers.map(fn => `${fn}(2 2)`),
        ...f.singleNumbers.map(fn => `${fn}(2, 2)`),
        'scale3d(2 2 1)',
        'scale3d(2, 2, 1,)',
        'skew(0.5turn,)',
        'skew(90deg, 90deg, 90deg)',
        'skew(foo)',
        'skew(90deg 90deg)',
        'translate3d(10px 10px 10px)',
        'translate3d(10%, 10%, 10%, 10%)',
        'translate3d(10%, 10%,)',
        'rotate3d(10, 10, 10, 10)',
        'rotate3d(10)',
        'rotate3d(10 10 10 90deg)',
    ],
};
